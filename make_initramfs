#!/bin/sh

ROOT=/boot
VERSION=`equery -q list zfs | cut -d"-" -f3`
INITRAMFS="$ROOT/initramfs-$VERSION"
XZ_OPTS="--check=crc32 --lzma2=dict=512KiB"

if [ -z $1 ]
then
	CREATE=1
	INITRAM_DIR=`mktemp -d -t initramfs.XXX`
else
	CREATE=0
	INITRAM_DIR=$1
fi

DIRS="	sys
	proc
	dev
	etc
	bin
	lib
	lib64
	newroot
	sbin
	usr/lib
	usr/lib64
	usr/bin
	usr/sbin
	"

BINS="	/sbin/zpool
	/sbin/mount.zfs
	/sbin/zfs
	/bin/busybox
	/sbin/fdisk
	/usr/sbin/mkfs.fat
	"

EXTRA=" /lib/firmware/i915/*
	"

echo "composing initramfs in $INITRAM_DIR"

if [ $CREATE == 0 ]
then
	echo "Remove old initramfs in $INITRAM_DIR? (y/n)"
	read ANS
	if [ $ANS == "y" ]
	then
		rm -r $INITRAM_DIR
	fi
fi

for dir in $DIRS
do
	mkdir -p $INITRAM_DIR/$dir
done

for bin in `lddtree -l $BINS 2>/dev/null | sort -u`
do
	cp -L $bin ${INITRAM_DIR}/$bin
done

# fix gcc link
cp -L `find /usr/lib/gcc -name "libgcc_s.so.1" | head -n1` $INITRAM_DIR/lib64/

# add /dev/console
mknod $INITRAM_DIR/dev/console c 5 1 2>/dev/null

for bin in $EXTRA
do
	[ -e $bin ] || continue
	mkdir -p $INITRAM_DIR/`dirname $bin`
	cp -L $bin $INITRAM_DIR/$bin
done

# populate plymouth if available
if [ -x /usr/libexec/plymouth/plymouth-populate-initrd ]
then
	/usr/libexec/plymouth/plymouth-populate-initrd -t $INITRAM_DIR
fi

# init
cp /root/bin/init.tpl $INITRAM_DIR/init
chmod +x $INITRAM_DIR/init

cp /etc/zfs/*.cache $INITRAM_DIR/etc/

if [ $CREATE == 1 ]
then
	# backup
	echo "backing up $INITRAMFS"
	mv $INITRAMFS $INITRAMFS.old

	# create
	echo "creating new $INITRAMFS"
	cd $INITRAM_DIR
	find . | cpio --quiet -o -H newc | xz $XZ_OPTS > $INITRAMFS
	cd
	rm -r $INITRAM_DIR
fi
